"""add feedback data

Revision ID: 7a28b4e30915
Revises: b63655370c95
Create Date: 2024-07-05 06:52:28.992049

"""

from typing import Sequence, Union

from alembic import op
from sqlalchemy import MetaData, Table

# revision identifiers, used by Alembic.
revision: str = "7a28b4e30915"
down_revision: Union[str, None] = "b63655370c95"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


labels = [
    {
        "label": "Don’t like the style",
    },
    {
        "label": "Not factually correct",
    },
    {
        "label": "Didn’t fully follow instructions",
    },
    {
        "label": "Refused when it shouldn’t have",
    },
    {
        "label": "Being lazy",
    },
    {
        "label": "Unsafe or problematic",
    },
    {
        "label": "Other",
    },
]

scores = [
    {
        "score": "negative",
    },
    {
        "score": "positive",
    },
]


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    meta = MetaData()
    meta.reflect(bind=op.get_bind())
    feedback_label_table = Table("feedback_label", meta)
    op.bulk_insert(feedback_label_table, labels)

    feedback_score_table = Table("feedback_score", meta)
    op.bulk_insert(feedback_score_table, scores)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    meta = MetaData()
    meta.reflect(bind=op.get_bind())
    feedback_label_table = Table("feedback_label", meta)
    d = feedback_label_table.delete().where(feedback_label_table.c.id >= 1)
    op.execute(d)
    feedback_score_table = Table("feedback_score", meta)
    d = feedback_score_table.delete().where(feedback_score_table.c.id >= 1)
    op.execute(d)
    # ### end Alembic commands ###
